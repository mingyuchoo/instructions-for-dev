#theme = "base16_default"

[editor]
  auto-save  = true
  shell      = ["fish"]
  text-width = 120
  true-color = true

  [editor.cursor-shape]
    insert = "bar"
    normal = "block"
    select = "underline"

  [editor.file-picker]
    hidden = false

  [editor.whitespace.render]
    nbsp    = "none"
    newline = "none"
    nnbsp   = "none"
    space   = "none"
    tab     = "all"
    tabpad  = "none"

  [editor.whitespace.characters]
    nbsp    = "⍽"
    newline = "⏎"
    nnbsp   = "␣"
    space   = "·"
    tab     = "→"
    tabpad  = "·"

  [editor.indent-guides]
    character   = "┊"
    render      = true
    skip-levels = 1

[keys.normal]
  # Quick iteration on config changes
  C-o = ":config-open"
  C-r = ":config-reload"

  # Some nice Helix stuff
  C-h = "select_prev_sibling"
  C-j = "shrink_selection"
  C-k = "expand_selection"
  C-l = "select_next_sibling"

  # Personal preference
  O = ["normal_mode", "open_above"]
  o = ["normal_mode", "open_below"]

  # Muscle memory
  "$" = "goto_line_end"
  "%" = "match_brackets"
  0 = "goto_line_start"
  C = [
    "delete_selection",
    "extend_to_line_end",
    "insert_mode",
    "yank_main_selection_to_clipboard",
  ]
  D = [
    "delete_selection",
    "extend_to_line_end",
    "yank_main_selection_to_clipboard",
  ]
  G = "goto_file_end"
  S = "surround_add" # Would be nice to be able to do something after this but it isn't chainable
  V = ["extend_to_line_bounds", "select_mode"]
  "^" = "goto_first_nonwhitespace"
  "{" = ["collapse_selection", "goto_prev_paragraph"]
  "}" = ["collapse_selection", "goto_next_paragraph"]

  # Clipboards over registers ye ye
  P = ["collapse_selection", "paste_clipboard_before"]
  p = ["collapse_selection", "paste_clipboard_after"]
  x = "delete_selection"
  # Would be nice to add ya and yi, but the surround commands can't be chained
  Y = [
    "collapse_selection",
    "extend_to_line_end",
    "yank_main_selection_to_clipboard",
  ]

  # Uncanny valley stuff, this makes w and b behave as they do Vim
  B = ["collapse_selection", "move_prev_long_word_start"]
  E = ["collapse_selection", "move_next_long_word_end"]
  W = ["collapse_selection", "move_char_right", "move_next_long_word_start"]
  b = ["collapse_selection", "move_prev_word_start"]
  e = ["collapse_selection", "move_next_word_end"]
  w = ["collapse_selection", "move_char_right", "move_next_word_start"]

  # If you want to keep the selection-while-moving behaviour of Helix, this two lines will help a lot,
  # especially if you find having text remain selected while you have switched to insert or append mode
  #
  # There is no real difference if you have overridden the commands bound to 'w', 'e' and 'b' like above
  # But if you really want to get familiar with the Helix way of selecting-while-moving, comment the
  # bindings for 'w', 'e', and 'b' out and leave the bindings for 'i' and 'a' active below. A world of difference!
  a = ["append_mode", "collapse_selection"]
  i = ["collapse_selection", "insert_mode"]

  # Undoing the 'd' + motion commands restores the selection which is annoying
  u = ["collapse_selection", "undo"]

  # Escape the madness! No more fighting with the cursor! Or with multiple cursors!
  esc = ["collapse_selection", "keep_primary_selection"]

  # Search for word under cursor
  "#" = [
    "move_char_right",
    "move_next_word_end",
    "move_prev_word_start",
    "search_prev",
    "search_selection",
  ]
  "*" = [
    "move_char_right",
    "move_next_word_end",
    "move_prev_word_start",
    "search_next",
    "search_selection",
  ]

  # Make j and k behave as they do Vim when soft-wrap is enabled
  j = "move_line_down"
  k = "move_line_up"

  # Extend and select commands that expect a manual input can't be chained
  # I've kept d[X] commands here because it's better to at least have the stuff you want to delete
  # selected so that it's just a keystroke away to delete
  [keys.normal.d]
    G = [
      "delete_selection",
      "extend_to_line_bounds",
      "extend_to_line_bounds",
      "goto_last_line",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    W = [
      "delete_selection",
      "move_next_long_word_start",
      "yank_main_selection_to_clipboard",
    ]
    a = ["select_textobject_around"]
    d = [
      "delete_selection",
      "extend_to_line_bounds",
      "yank_main_selection_to_clipboard",
    ]
    down = [
      "delete_selection",
      "extend_line_below",
      "extend_to_line_bounds",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    g = {g = ["delete_selection", "extend_to_line_bounds", "extend_to_line_bounds", "goto_file_start", "normal_mode", "select_mode", "yank_main_selection_to_clipboard"]}
    i = ["select_textobject_inner"]
    j = [
      "delete_selection",
      "extend_line_below",
      "extend_to_line_bounds",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    k = [
      "delete_selection",
      "extend_line_above",
      "extend_to_line_bounds",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    s = ["surround_delete"]
    t = ["extend_till_char"]
    up = [
      "delete_selection",
      "extend_line_above",
      "extend_to_line_bounds",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    w = [
      "delete_selection",
      "move_next_word_start",
      "yank_main_selection_to_clipboard",
    ]

  [keys.normal.y]
    G = [
      "collapse_selection",
      "extend_to_line_bounds",
      "extend_to_line_bounds",
      "goto_last_line",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    W = [
      "collapse_selection",
      "move_next_long_word_start",
      "normal_mode",
      "yank_main_selection_to_clipboard",
    ]
    down = [
      "collapse_selection",
      "extend_line_below",
      "extend_to_line_bounds",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    g = {g = ["collapse_selection", "extend_to_line_bounds", "extend_to_line_bounds", "goto_file_start", "normal_mode", "select_mode", "yank_main_selection_to_clipboard"]}
    j = [
      "collapse_selection",
      "extend_line_below",
      "extend_to_line_bounds",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    k = [
      "collapse_selection",
      "extend_line_above",
      "extend_to_line_bounds",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    up = [
      "collapse_selection",
      "extend_line_above",
      "extend_to_line_bounds",
      "normal_mode",
      "select_mode",
      "yank_main_selection_to_clipboard",
    ]
    w = [
      "collapse_selection",
      "move_next_word_start",
      "normal_mode",
      "yank_main_selection_to_clipboard",
    ]
    y = [
      "collapse_selection",
      "extend_to_line_bounds",
      "normal_mode",
      "yank_main_selection_to_clipboard",
    ]

[keys.insert]
  # Escape the madness! No more fighting with the cursor! Or with multiple cursors!
  esc = ["collapse_selection", "normal_mode"]

[keys.select]
  # Muscle memory
  "$" = "goto_line_end"
  "%" = "match_brackets"
  0   = "goto_line_start"
  C   = ["change_selection", "extend_to_line_bounds", "goto_line_start"]
  D   = ["delete_selection", "extend_to_line_bounds", "normal_mode"]
  G   = "goto_file_end"
  S   = "surround_add"                                                   # Basically 99% of what I use vim-surround for
  U   = ["collapse_selection", "normal_mode", "switch_to_uppercase"]
  "^" = "goto_first_nonwhitespace"
  u   = ["collapse_selection", "normal_mode", "switch_to_lowercase"]
  "{" = ["extend_to_line_bounds", "goto_prev_paragraph"]
  "}" = ["extend_to_line_bounds", "goto_next_paragraph"]

  # Visual-mode specific muscle memory
  a = "select_textobject_around"
  i = "select_textobject_inner"

  # Some extra binds to allow us to insert/append in select mode because it's nice with multiple cursors
  C-a = ["append_mode", "collapse_selection"]
  tab = [
    "collapse_selection",
    "insert_mode",
  ] # tab is read by most terminal editors as "C-i"

  # Make selecting lines in visual mode behave sensibly
  j = ["extend_line_down", "extend_to_line_bounds"]
  k = ["extend_line_up", "extend_to_line_bounds"]

  # Clipboards over registers ye ye
  P = "paste_clipboard_before"
  Y = [
    "collapse_selection",
    "extend_to_line_bounds",
    "goto_line_start",
    "normal_mode",
    "yank_main_selection_to_clipboard",
  ]
  d = ["delete_selection", "yank_main_selection_to_clipboard"]
  p = "replace_selections_with_clipboard" # No life without this
  x = ["delete_selection", "yank_main_selection_to_clipboard"]
  y = [
    "collapse_selection",
    "flip_selections",
    "normal_mode",
    "yank_main_selection_to_clipboard",
  ]

  # Escape the madness! No more fighting with the cursor! Or with multiple cursors!
  esc = ["collapse_selection", "keep_primary_selection", "normal_mode"]
