# #####################################
# Rust
# #####################################
[[language]]
  auto-format      = true
  file-types       = ["rs"]
  formatter        = {command = "rustfmt"}
  indent           = {tab-width = 4, unit = "    "}
  injection-regex  = "rust"
  language-servers = ["rust-analyzer"]
  name             = "rust"
  roots            = ["Cargo.lock", "Cargo.toml"]
  scope            = "source.rust"

[language-server.rust-analyzer]
  command = "rust-analyzer"

  [language-server.rust-analyzer.config]
    cargo       = {loadOutDirsFromCheck = true}
    checkOnSave = {command = "clippy"}
    diagnostics = {disabled = ["unlinked-file", "unresolved-proc-macro"]}
    procMacro   = {enable = true, ignored = {leptos_macro = ["component", "server"]}}


# #####################################
# Haskell
# #####################################
[[language]]
  auto-format          = true
  block-comment-tokens = {start = "{-", end = "-}"}
  file-types           = ["hs", "hs-boot", "hsc"]
  formatter            = {command = "stylish-haskell", args = ["-i"]}
  indent               = {tab-width = 2, unit = "  "}
  injection-regex      = "hs|haskell"
  language-servers     = ["haskell-language-server"]
  name                 = "haskell"
  roots                = ["Setup.hs", "cabal.project", "stack.yaml"]
  scope                = "source.haskell"

[language-server.haskell-language-server]
  config = {haskell = {formattingProvider = "stylish-haskell"}}


# #####################################
# Erlang
# #####################################
[[language]]
  auto-format = true
  file-types = [
    "app",
    "erl",
    "hrl",
    {glob = "*.app.src"},
    {glob = "rebar.config"},
    {glob = "rebar.lock"},
  ]
  formatter = {command = "erlfmt", args = ["-"]}
  indent = {tab-width = 4, unit = "    "}
  injection-regex = "erl(ang)?"
  language-servers = ["erlang-ls"]
  name = "erlang"
  roots = ["rebar.config"]
  scope = "source.erlang"
  shebangs = ["escript"]


# #####################################
# Elixir
# #####################################
[[language]]
  auto-format         = true
  diagnostic-severity = "hint"
  file-types          = ["ex", "exs", "heex", {glob = "mix.lock"}]
  formatter           = {command = "mix", args = ["format", "-"]}
  indent              = {tab-width = 2, unit = "  "}
  injection-regex     = "(elixir|ex)"
  language-servers    = ["elixir-ls"]
  name                = "elixir"
  roots               = ["mix.exs", "mix.lock"]
  scope               = "source.elixir"
  shebangs            = ["elixir"]


# #####################################
# Python
# #####################################
[[language]]
  auto-format = true
  file-types = ["py", "pyc", "pyd", "pyi", "pyw"]
  formatter = {command = "black", args = ["--quiet", "-"]}
  indent = {tab-width = 4, unit = "    "}
  injection-regex = "python"
  language-servers = [
    {name = "pylsp", only-features = ["document-symbols", "format", "hover"]},
    {name = "pyright", except-features = ["format"]},
  ]
  name = "python"
  roots = ["Poetry.lock", "pyproject.toml", "pyrightconfig.json", "setup.py"]
  scope = "source.python"
  shebangs = ["python"]

[language-server.pylsp]
  command = "pylsp"
  config  = {pylsp = {plugins = {pycodestyle = {enabled = false}, mccabe = {enabled = false}, pyflakes = {enabled = false}, ruff = {enabled = true}, black = {enabled = true}}}}

[language-server.pyright]
  args    = ["--stdio"]
  command = "pyright-langserver"


# #####################################
# HTML
# #####################################
[[language]]
  auto-format = true
  file-types = [
    "asp",
    "aspx",
    "htm",
    "html",
    "jshtm",
    "jsp",
    "rhtml",
    "shtml",
    "volt",
    "xht",
    "xhtml",
  ]
  indent = {tab-width = 2, unit = "  "}
  injection-regex = "html"
  language-servers = ["vscode-html-language-server"]
  name = "html"
  scope = "text.html.basic"


# #####################################
# TOML
# #####################################
[[language]]
  auto-format = true
  formatter   = {command = "taplo", args = ["format", "-"]}
  indent      = {tab-width = 2, unit = "  "}
  name        = "toml"
